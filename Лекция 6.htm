<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 12">
<meta name=Originator content="Microsoft Word 12">
<link rel=File-List href="Лекция%206.files/filelist.xml">
<link rel=Edit-Time-Data href="Лекция%206.files/editdata.mso">
<link rel=OLE-Object-Data href="Лекция%206.files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Лекция 2-3</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="City"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Owner</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>user</o:LastAuthor>
  <o:Revision>7</o:Revision>
  <o:TotalTime>10</o:TotalTime>
  <o:Created>2009-03-17T22:39:00Z</o:Created>
  <o:LastSaved>2009-03-17T22:51:00Z</o:LastSaved>
  <o:Pages>8</o:Pages>
  <o:Words>4786</o:Words>
  <o:Characters>27284</o:Characters>
  <o:Company>ISIT</o:Company>
  <o:Lines>227</o:Lines>
  <o:Paragraphs>64</o:Paragraphs>
  <o:CharactersWithSpaces>32006</o:CharactersWithSpaces>
  <o:Version>12.00</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<link rel=dataStoreItem href="Лекция%206.files/item0010.xml"
target="Лекция%206.files/props0011.xml">
<link rel=themeData href="Лекция%206.files/themedata.thmx">
<link rel=colorSchemeMapping href="Лекция%206.files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>FullPage</w:Zoom>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>RU</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="--"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" LatentStyleCount="267">
  <w:LsdException Locked="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="99" Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="99" Name="page number"/>
  <w:LsdException Locked="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="99" Name="No List"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1107304683 0 0 159 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-520082689 -1073717157 41 0 66047 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:204;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1593833729 1073750107 16 0 415 0;}
@font-face
	{font-family:"Times New Roman CYR";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536859921 -1073711039 9 0 511 0;}
@font-face
	{font-family:"Courier New CYR";
	panose-1:2 7 3 9 2 2 5 2 4 4;
	mso-font-charset:204;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536859905 -1073711037 9 0 511 0;}
@font-face
	{font-family:"Arial CYR";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536859905 -1073711037 9 0 511 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
h1
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Заголовок 1 Знак";
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:"Arial","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	color:windowtext;
	mso-font-kerning:16.0pt;
	mso-fareast-language:EN-US;
	font-weight:bold;}
h2
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Заголовок 2 Знак";
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	color:windowtext;
	mso-fareast-language:EN-US;
	font-weight:bold;
	font-style:italic;}
h3
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Заголовок 3 Знак";
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	color:windowtext;
	font-weight:bold;}
h4
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Заголовок 4 Знак";
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	color:windowtext;
	font-weight:bold;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Заголовок 8 Знак";
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:8;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;
	font-style:italic;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-link:"Нижний колонтитул Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 233.85pt right 467.75pt;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{mso-style-unhide:no;
	mso-style-link:"Основной текст 2 Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;}
p.MsoBodyTextIndent2, li.MsoBodyTextIndent2, div.MsoBodyTextIndent2
	{mso-style-unhide:no;
	mso-style-link:"Основной текст с отступом 2 Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:1.0cm;
	mso-pagination:none;
	tab-stops:14.4pt 21.6pt 28.8pt 244.8pt;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
	{mso-style-unhide:no;
	mso-style-link:"Основной текст с отступом 3 Знак";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:24.0pt;
	margin-left:0cm;
	text-align:justify;
	text-indent:1.0cm;
	mso-pagination:none;
	tab-stops:21.6pt 43.2pt 57.6pt 64.8pt 79.2pt 86.4pt;
	layout-grid-mode:char;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
a:link, span.MsoHyperlink
	{mso-style-unhide:no;
	mso-ansi-font-size:13.0pt;
	mso-bidi-font-size:13.0pt;
	color:#0066CC;
	mso-text-animation:none;
	text-decoration:none;
	text-underline:none;
	text-decoration:none;
	text-line-through:none;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-unhide:no;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{mso-style-unhide:no;
	mso-style-link:"Текст Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	line-height:150%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p
	{mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
pre
	{mso-style-unhide:no;
	mso-style-link:"Стандартный HTML Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
tt
	{mso-style-unhide:no;
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-unhide:no;
	mso-style-link:"Текст выноски Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
span.1
	{mso-style-name:"Заголовок 1 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Заголовок 1";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-weight:bold;}
span.2
	{mso-style-name:"Заголовок 2 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Заголовок 2";
	mso-ansi-font-size:13.0pt;
	mso-bidi-font-size:13.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.3
	{mso-style-name:"Заголовок 3 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Заголовок 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.4
	{mso-style-name:"Заголовок 4 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Заголовок 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
span.HTML
	{mso-style-name:"Стандартный HTML Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Стандартный HTML";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-hansi-font-family:Consolas;}
span.8
	{mso-style-name:"Заголовок 8 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Заголовок 8";
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;}
span.a
	{mso-style-name:"Нижний колонтитул Знак";
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Нижний колонтитул";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.20
	{mso-style-name:"Основной текст 2 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Основной текст 2";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.21
	{mso-style-name:"Основной текст с отступом 2 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Основной текст с отступом 2";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.30
	{mso-style-name:"Основной текст с отступом 3 Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Основной текст с отступом 3";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;}
span.a0
	{mso-style-name:"Текст Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Текст;
	mso-ansi-font-size:10.5pt;
	mso-bidi-font-size:10.5pt;
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-hansi-font-family:Consolas;}
span.a1
	{mso-style-name:"Текст выноски Знак";
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Текст выноски";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-ascii-font-family:Tahoma;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
p.title1, li.title1, div.title1
	{mso-style-name:title_1;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Verdana","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:black;}
p.textbold, li.textbold, div.textbold
	{mso-style-name:text_bold;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Verdana","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
p.22, li.22, div.22
	{mso-style-name:"заголовок 2";
	mso-style-unhide:no;
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Arial CYR","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;
	font-weight:bold;
	font-style:italic;}
p.31, li.31, div.31
	{mso-style-name:"заголовок 3";
	mso-style-unhide:no;
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Arial CYR","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.a2, li.a2, div.a2
	{mso-style-name:текст;
	mso-style-unhide:no;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman CYR","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.a3, li.a3, div.a3
	{mso-style-name:программа;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New CYR";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.a4, li.a4, div.a4
	{mso-style-name:список;
	mso-style-unhide:no;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:35.45pt;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	tab-stops:42.55pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman CYR","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.a5, li.a5, div.a5
	{mso-style-name:"без формата";
	mso-style-unhide:no;
	mso-style-parent:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New CYR";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.a6, li.a6, div.a6
	{mso-style-name:определение;
	mso-style-unhide:no;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	text-autospace:none;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:10.0pt;
	font-family:"Arial CYR","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;}
p.a7, li.a7, div.a7
	{mso-style-name:"от края";
	mso-style-unhide:no;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman CYR","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;}
p.40, li.40, div.40
	{mso-style-name:"заголовок 4";
	mso-style-unhide:no;
	mso-style-next:Обычный;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;
	font-weight:bold;
	mso-bidi-font-weight:normal;
	text-decoration:underline;
	text-underline:single;}
p.23, li.23, div.23
	{mso-style-name:Стиль2;
	mso-style-unhide:no;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;}
p.10, li.10, div.10
	{mso-style-name:Обычный1;
	mso-style-unhide:no;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:18.0pt;
	margin-bottom:.0001pt;
	text-indent:-18.0pt;
	mso-pagination:widow-orphan;
	tab-stops:18.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;
	mso-fareast-language:EN-US;}
span.texample
	{mso-style-name:texample;
	mso-style-unhide:no;}
span.keyword
	{mso-style-name:keyword;
	mso-style-unhide:no;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("Лекция%206.files/header.htm") fs;
	mso-footnote-continuation-separator:url("Лекция%206.files/header.htm") fcs;
	mso-endnote-separator:url("Лекция%206.files/header.htm") es;
	mso-endnote-continuation-separator:url("Лекция%206.files/header.htm") ecs;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:35.95pt 37.3pt 35.95pt 36.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-even-footer:url("Лекция%206.files/header.htm") ef1;
	mso-footer:url("Лекция%206.files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:571277922;
	mso-list-type:simple;
	mso-list-template-ids:653423960;}
@list l0:level1
	{mso-level-text:"%1\. ";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:14.15pt;
	mso-level-legacy-space:0cm;
	margin-left:49.6pt;
	text-indent:-14.15pt;
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman CYR","serif";
	mso-text-animation:none;
	mso-ansi-font-weight:normal;
	mso-bidi-font-weight:normal;
	mso-ansi-font-style:normal;
	mso-bidi-font-style:normal;
	text-decoration:none;
	text-underline:none;
	text-decoration:none;
	text-line-through:none;}
@list l1
	{mso-list-id:702677240;
	mso-list-type:simple;
	mso-list-template-ids:-818406558;}
@list l1:level1
	{mso-level-start-at:3;
	mso-level-text:"%1\. ";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:14.15pt;
	mso-level-legacy-space:0cm;
	margin-left:49.6pt;
	text-indent:-14.15pt;
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman CYR","serif";
	mso-text-animation:none;
	mso-ansi-font-weight:normal;
	mso-bidi-font-weight:normal;
	mso-ansi-font-style:normal;
	mso-bidi-font-style:normal;
	text-decoration:none;
	text-underline:none;
	text-decoration:none;
	text-line-through:none;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-qformat:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="4098"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU link="#0066CC" vlink=purple style='tab-interval:35.4pt'>

<div class=Section1>

<p align=center style='text-align:center'><span style='font-family:"Arial","sans-serif";
mso-no-proof:yes'><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="Рисунок_x0020_11" o:spid="_x0000_i1029" type="#_x0000_t75"
 style='width:19.5pt;height:21pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="Лекция%206.files/image001.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=26 height=28
src="Лекция%206.files/image003.jpg" v:shapes="Рисунок_x0020_11"><![endif]></span><span
style='font-family:"Arial","sans-serif"'><a href="../index.htm"><span
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt'>Главная</span></a><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><!--mstheme--><span
style='font-family:"Arial","sans-serif";mso-no-proof:yes'><img border=0
width=600 height=11 id="_x0000_i1028" src="../_themes/capsules/capsepa.gif"></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:16.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Лекция 6<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center;background:white'><b
style='mso-bidi-font-weight:normal'><span style='font-size:16.0pt'>Рекурсивные
алгоритмы.<o:p></o:p></span></b></p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Times New Roman","serif"'>Особенности
программирования рекурсивных функций<o:p></o:p></span></b></p>

<p class=MsoNormal style='background:white'>Рекурсивные функции лишь на первый
взгляд выглядят как обычные фрагменты программ. Чтобы ощутить их специфику,
достаточно мысленно проследить по тексту программы процесс ее выполнения. В
обычной программе мы будем следовать по цепочке вызовов функций, но ни разу
повторно не войдем в один и тот же фрагмент, пока из него не вышли. Можно
сказать, что процесс выполнения программы<span style='mso-spacerun:yes'> 
</span>“ложится” однозначно на текст программы. Другое дело - рекурсия. Если
попытаться отследить по тексту программы процесс ее выполнения, то мы придем к
такой ситуации: войдя в рекурсивную функцию <span lang=EN-US style='mso-ansi-language:
EN-US'>F</span>, мы “движемся” по ее тексту до тех пор, пока не встретим ее
вызова, после чего мы опять начнем выполнять ту же самую функцию сначала. При
этом следует отметить самое важное свойство рекурсивной функции - ее первый
вызов еще не закончился.</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>На самом деле этот эффект
воспроизводится в компьютере. Однако копируется при этом не весь текст функции
(не вся функция), а только ее части, связанные с данными (формальные,
фактические параметры, локальные переменные и точка возврата). Алгоритм
(операторы, выражения) рекурсивной функции не меняется, поэтому он присутствует
в памяти компьютера в единственном экземпляре.</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>В связи с вышесказанным, работу
программы, содержащей рекурсивные функции, лучше всего представлять в виде
некоторого процесса, в котором вызов рекурсивной функции является одним из его
шагов. Последовательность шагов может быть линейной (линейная рекурсия), может
быть ветвящейся (когда рекурсивный вызов содержится в теле функции более одного
раза, либо производится в цикле). В терминах процесса и его шагов основные
параметры рекурсивной функции получают дополнительный смысл, который связывает
их с протеканием самого процесса: </p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>-формальные параметры рекурсивной
функции представляют начальное состояние для текущего шага процесса; </p>

<p class=MsoNormal style='background:white'><span
style='mso-spacerun:yes'> </span>-фактические параметры рекурсивного вызова
представляют начальное состояние для следующего шага, в который производится
переход из текущего при рекурсивном вызове; </p>

<p class=MsoNormal style='background:white'><span
style='mso-spacerun:yes'> </span>-автоматические переменные представляют
внутренние характеристики процесса на текущем шаге его выполнения; </p>

<p class=MsoNormal style='background:white'><span
style='mso-spacerun:yes'> </span>-внешние переменные представляют глобальное
состояние всей системы, через которое отдельные шаги в последовательности могут
взаимодействовать между собой.</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>Из сказанного следует, что
формальные параметры рекурсивной функции, внешние и локальные переменные не
могут быть взаимозаменяемы, как это иногда делается в обычных функциях. Кроме
того, каждый новый рекурсивный вызов порождает новый &quot;экземпляр&quot;
формальных параметров и локальных переменных, причем старый
&quot;экземпляр&quot; не уничтожается, а сохраняется в стеке по принципу
вложенности. Здесь имеет место единственный случай, когда одному имени
переменной в процессе работы программы соответствуют несколько ее
&quot;экземпляров&quot;. <span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>Разработка рекурсивных функций
имеет свою специфику. Прежде всего, рекурсивные функции используются для
обработки рекурсивных структур данных. Здесь обработка вложенного элемента
структуры данных естественным образом предполагает рекурсивный вызов функции с
передачей указателя на него. Однако рекурсивным может быть и любой алгоритм, в
котором имеется линейная или разветвляющаяся цепочка шагов, в каждом из которых
выполняется одинаковая последовательность действий.</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Times New Roman","serif"'>Философские
аспекты рекурсии<o:p></o:p></span></b></p>

<p class=MsoNormal style='background:white'>Рекурсивные функции дают богатый
материал для размышлений о процессе программирования вообще и об его связи с
другими областями деятельности.</p>

<p class=MsoNormal style='background:white'>Как же следует вести разработку
рекурсивного алгоритма, “не вспоминая о прошлом” и “не заглядывая в будущее”.
Опираясь на метод математической индукции можно сформулировать следующие
правила:</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>-рекурсивная функция
разрабатывается как обобщенный шаг процесса, который вызывается в произвольных
начальных условиях и который приводит к следующему шагу в некоторых новых
условиях;</p>

<p class=MsoNormal style='background:white'>-обобщенные начальные условия шага
- формальные параметры функции;</p>

<p class=MsoNormal style='background:white'>-начальные условия следующего шага
- фактические параметры рекурсивного вызова;</p>

<p class=MsoNormal style='background:white'>-рекурсивная функция должна
проверять условия завершения рекурсии, при которых следующий шаг процесса не
выполняется;</p>

<p class=MsoNormal style='background:white'>-локальными переменными функции
должны быть объявлены все переменные, которые имеют отношение к протеканию
текущего шага процесса.</p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Times New Roman","serif"'>Линейная рекурсия<o:p></o:p></span></b></p>

<p class=MsoNormal style='background:white'>Простейшим примером рекурсии
является линейная рекурсия, когда функция содержит единственный условный вызов
самой себя. В таком случае рекурсия становится эквивалентной обычному циклу.
Действительно, любой циклический алгоритм можно преобразовать в линейно-рекурсивный
и наоборот. </p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>// </span>Циклический<span
style='mso-ansi-language:EN-US'> </span>алгоритм<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int fact(int n)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{<o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>for (int s=1;
n!=0; n--) s *=n;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>return s;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>// </span>Рекурсивный<span
style='mso-ansi-language:EN-US'> </span>алгоритм<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int fact(int n)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{ <o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (n==1) return
1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>return n *
fact(n-1);<o:p></o:p></span></p>

<p class=a3>}</p>

<p class=MsoNormal style='text-indent:9.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span style='font-size:10.0pt'>Вычисление
указанного числа Фибоначчи</span></i></b><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:16.0pt'><o:p></o:p></span></i></b></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='background:white'><span style='font-size:10.0pt'><span
style='mso-tab-count:1'>                </span></span><span
style='mso-spacerun:yes'> </span>Последовательность Фибоначчи задается
следующими соотношениями: a(0)=a(1)=1, a(i)=a(i-1)+a(i-2), где i&gt;1, которые
легко записать в виде рекурсивной функции.</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>int fib (int n)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>{<span style='mso-tab-count:
1'>     </span><o:p></o:p></span></p>

<p class=a3 style='margin-left:70.2pt;text-indent:36.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>if (n==0) return 1;<span style='mso-tab-count:
1'>    </span><o:p></o:p></span></p>

<p class=a3 style='margin-left:105.6pt;text-indent:36.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>else if (n==1) return 1; <o:p></o:p></span></p>

<p class=a3 style='margin-left:141.0pt;text-indent:36.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>else return fib(n-1)+fib(n-2);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span></span>}</p>

<p class=MsoNormal><span style='font-size:10.0pt'><span style='mso-tab-count:
1'>                </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:9.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span style='font-size:10.0pt'>Вычисления
квадрата натурального числа<o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:9.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='background:white'><span style='mso-tab-count:1'>            </span>Известно,
что (n+1)2=n2+2*n+1 и 12=1, отсюда</p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:10.0pt'><span style='position:relative;top:16.0pt;mso-text-raise:
-16.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1025" type="#_x0000_t75"
 style='width:237.75pt;height:39pt' o:ole="">
 <v:imagedata src="Лекция%206.files/image004.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=317 height=52
src="Лекция%206.files/image005.gif" v:shapes="_x0000_i1025"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.2" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1298842653">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><span style='mso-tab-count:
1'>                </span></span><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>int kv(int i)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>{<span style='mso-tab-count:
1'>     </span><o:p></o:p></span></p>

<p class=a3 style='margin-left:70.2pt;text-indent:36.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>if (i==1) return 1;<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:3'>                  </span>else return
kv(i-1)+2*(i-1)+1;<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span></span>}</p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Times New Roman","serif"'>Рекурсия и
поисковые задачи<o:p></o:p></span></b></p>

<p class=MsoNormal style='background:white'>С помощью рекурсии легко решаются
задачи, связанные с поиском, основанном на полном или частичном переборе
возможных вариантов. Принцип рекурсивности заключается здесь в том, что процесс
поиска разбивается на шаги, на каждом из которых выбирается и проверяется
очередной элемент из множества, а алгоритм поиска повторяется, но уже для
“оставшихся” данных. При этом вовсе не важно, каким образом цепочка шагов
достигнет цели и сколько вариантов будет перебираться.<span
style='mso-spacerun:yes'>  </span>Единственное, на что следует обратить
внимание - корректность очередного шага.<span style='mso-spacerun:yes'> 
</span></p>

<p class=MsoNormal style='background:white'>Само множество, в котором
производится поиск, обычно реализуется в виде глобальных данных, в которых
каждый шаг выбирает необходимые элементы, а по завершении поиска возвращает их
обратно.</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>При реализации поисковых задач
следует обратить внимание на результат рекурсивной функции. Он непосредственно
связан с организацией процесса поиска и перебора вариантов:</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>-если рекурсивная функция имеет
результат void, то она не может повлиять на характер протекания процесса поиска
и реализуемый алгоритм будет выполнять полный перебор всех возможных вариантов
(если только для связи рекурсивных вызовов не будут использоваться глобальные данные);</p>

<p class=MsoNormal style='background:white'>-если рекурсивная функция выполняет
поиск первого попавшегося варианта, то результатом ее является как правило
логическое значение (в С - 0/1). При этом “ИСТИНА” соответствует успешному
завершению поиска, а “ЛОЖЬ” - неудачному. Общим для всех алгоритмов поиска
является: если рекурсивный вызов возвращает “ИСТИНУ”, то она должна быть
немедленно “передана наверх”, то есть текущий вызов также должен быть завершен
со значением “ИСТИНА”. Если рекурсивный вызов возвращает “ЛОЖЬ”, по поиск
должен быть продолжен. При завершении полного перебора всех вариантов
рекурсивная функция также должна возвратить “ЛОЖЬ”;</p>

<p class=MsoNormal style='background:white'>-если в процессе поиска
производится более сложный анализ и сравнение вариантов, то рекурсивная функция
и, соответственно,<span style='mso-spacerun:yes'>  </span>шаг процесса должны
производить выбор между подходящими вариантами, в целью выбора наиболее
оптимального. Обычно для этого используется минимум или максимум какой-либо
характеристики выбираемого варианта. </p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>Тогда рекурсивная функция
возвращает значение, которое является оценкой для оставшихся не просмотренных
элементов, а текущий рекурсивный вызов выбирает из них минимум или максимум с
учетом данных текущего шага.</p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;font-family:
"Times New Roman","serif"'>Поиск выхода в лабиринте<o:p></o:p></span></i></b></p>

<p class=MsoNormal style='background:white'>С точки зрения математики лабиринт
представляет собой граф, а алгоритм поиска выхода из него - производит поиск
пути, соединяющего заданные вершины. Однако в данном примере мы воспользуемся
более простым, естественным представлением лабиринта. Зададим его в виде
двумерного массива, в котором значение 1 будет обозначать “стенку”, а
0-“проход”. </p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=a3>int LB[10][10]={</p>

<p class=a3>{1,1,0,1,1,1,1,1,1,1},</p>

<p class=a3>{1,1,0,1,1,1,1,1,1,1},</p>

<p class=a3>{1,1,0,0,1,0,0,0,1,1},</p>

<p class=a3>{1,1,1,0,0,0,1,0,1,1},</p>

<p class=a3>{1,0,1,1,1,0,0,0,1,1},</p>

<p class=a3>{1,0,0,0,0,0,1,1,1,1},</p>

<p class=a3>{1,1,1,1,1,0,1,1,1,1},</p>

<p class=a3>{1,1,1,1,1,0,0,0,1,1},</p>

<p class=a3>{1,1,1,1,1,1,1,1,1,1},</p>

<p class=a3>{1,1,1,1,1,1,1,1,1,1}};</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'>Шаг алгоритма состоит в проверке
возможности сделать ход в одном из четырех направлений. Рекурсивный характер
алгоритма состоит в том, что в каждой соседней точке реализуется тот же самый
алгоритм поиска. Формальными параметрами рекурсивной функции в данном случае
являются координаты точки, из которой в данный момент осуществляется поиск.
Фактические параметры - координаты соседней точки, в которой реализуется
рекурсивный алгоритм. </p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>void step(int
x,int y)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>step(x+1,y);...<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>step(x,y+1);...<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>step(x-1,y);...<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>step(x,y-1);...<o:p></o:p></span></p>

<p class=a3>}</p>

<p class=MsoNormal style='background:white'>Результат рекурсивной функции
логический - он показывает, можно ли через данную точку достигнуть выхода.
Рассмотрим подробнее логику формирования результата на очередном шаге. Если в
текущем шаге рекурсии через некоторую соседнюю точку можно достигнуть выхода,
то рекурсивный вызов возвратит результат ИСТИНА, который должен быть передан и
в предыдущую точку (то есть в предыдущий вызов). Если ни одна соседняя точка не
возвращает положительного результата, то результат текущего шага также
отрицателен.</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int step(int x,int
y)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{...<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x+1,y)) return 1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x,y+1)) return 1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x-1,y)) return 1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x,y-1)) return 1;<o:p></o:p></span></p>

<p class=a3>return 0;</p>

<p class=a3>}</p>

<p class=MsoNormal style='background:white'>Однако здесь фиксируем только факт
того, что выход найден, но не возвращаем найденный путь. Последнее можно
сделать разными способами. Например, использовать те же самые глобальные данные
для отметки “хороших” точек</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int step(int x,int
y)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{...<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x+1,y)) { LB[x][y]=2; return 1;}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x,y+1)) { LB[x][y]=2; return 1;}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x-1,y)) { LB[x][y]=2; return 1;}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x,y-1)) { LB[x][y]=2; return 1;}<o:p></o:p></span></p>

<p class=a3>return 0;</p>

<p class=a3>}</p>

<p class=MsoNormal style='background:white'>Следующий шаг - отсечение
недопустимых точек, в данном случае это - стенки лабиринта. Здесь же вводится
ограничение рекурсии - выход найден, если достигнут край<span
style='mso-spacerun:yes'>  </span>лабиринта:</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int step(int x,int
y)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{ <o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (LB[x][y]==1)
return 0;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (x==0 || x==9
|| y==0 || y==9) return 1; ...<o:p></o:p></span></p>

<p class=MsoNormal style='background:white'>И, наконец, последнее ограничение.
Естественно, что алгоритм не должен возвращаться в ту точку, из которой он
только что пришел. Отсюда естественное желание - передавать на вход функции и
координаты “предыдущей” точки. Но это не дает гарантии от зацикливания. Так,
если в лабиринте есть замкнутые пути, то зацикливание произойдет, даже если
помнить предыдущую точку. Выход - в отметке всех пройденных точек лабиринта. Но
при этом следует заметить, что каждая точка отмечается только на время
рекурсивного вызова, если эти вызовы дают отрицательный результат, то отметка
снимается. Предлагаемый ниже вариант с отметками пройденных точек, кроме всего
прочего, сохраняет отмеченным путь, который ведет к выходу из лабиринта</p>

<p class=a2><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int step(int x,int
y)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (LB[x][y]==1 ||
LB[x][y]==1) return 0;<span style='mso-tab-count:1'>      </span></span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span><span lang=EN-US style='mso-ansi-language:
EN-US'>// </span>стенки<span style='mso-ansi-language:EN-US'> </span>и<span
style='mso-ansi-language:EN-US'> </span>циклы<span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (x==0 || x==9
|| y==0 || y==9) return 1; <span style='mso-tab-count:1'>   </span>// </span>края<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>LB[x][y]=2;<span
style='mso-tab-count:6'>                              </span></span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span><span lang=EN-US style='mso-ansi-language:
EN-US'>// </span>отметить<span style='mso-ansi-language:EN-US'> </span>точку<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x+1,y)) return 1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x,y+1)) return 1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x-1,y)) return 1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if<span
style='mso-spacerun:yes'>  </span>(step(x,y-1)) return 1;<o:p></o:p></span></p>

<p class=a3>LB[x][y]=0;<span style='mso-tab-count:6'>                              </span><span
style='font-family:"Courier New"'><span style='mso-tab-count:1'>      </span></span>//
снять отметку</p>

<p class=a3>return 0;</p>

<p class=a3>}</p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='background:white'><o:p>&nbsp;</o:p></p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;font-family:
"Times New Roman","serif"'>Линейный кроссворд<o:p></o:p></span></i></b></p>

<p class=a2><span style='font-size:11.0pt'>Для заданного набора слов требуется
построить линейный кроссворд. Если окончание одного слова совпадает с началом
следующего более чем в одной букве (например, МАТРАС-РАСИСТ), то такие слова
можно объединить в цепочку. Первоначально ставится задача - получить любую
такую цепочку, окончательно - цепочку минимальной длины.</span><span
style='font-size:11.0pt;font-family:"Times New Roman","serif"'><o:p></o:p></span></p>

<p class=a2><span style='font-size:11.0pt'>Начало проектирования любой
рекурсивной программы заключается в определении шага рекурсивного процесса.
Пусть имеется уже составленная цепочка из выбранных слов. Очередной шаг
процесса состоит в попытке присоединения к имеющейся цепочке еще одного слова
из оставшихся. Если это возможно, то для новой цепочки необходимо выполнить
попытку присоединить следующее слово и так далее, то есть выполнить следующий
шаг рекурсивного процесса. Таким образом</span><span style='font-size:11.0pt;
font-family:"Times New Roman","serif"'>:<o:p></o:p></span></p>

<p class=a4><span style='font-size:11.0pt'>- рекурсивная функция выполняет
попытку присоединения очередного слова к уже выстроенной цепочке</span><span
style='font-size:11.0pt;font-family:"Times New Roman","serif"'>;<o:p></o:p></span></p>

<p class=a4><span style='font-size:11.0pt'>- результатом функции является
логическое значение (данную цепочку можно достроить), функция ищет первый
подходящий вариант</span><span style='font-size:11.0pt;font-family:"Times New Roman","serif"'>;<o:p></o:p></span></p>

<p class=a4><span style='font-size:11.0pt'>- условием завершения рекурсии
является отсутствие еще не присоединенных к цепочке слов (успешное завершение),
либо невозможность завершения цепочки ни через одно из оставшихся слов
(неудача)</span><span style='font-size:11.0pt;font-family:"Times New Roman","serif"'>.</span><span
style='font-size:11.0pt'><o:p></o:p></span></p>

<p class=a2><span style='font-size:11.0pt'>Множество возможных вариантов
строится на основе обычного комбинаторного перебора всех допустимых сочетаний
(последовательностей) из элементов множества ( в данном случае - слов). Это
множество является глобальной структурой данных, из которой на каждом шаге
извлекается очередной элемент, но по завершении просмотра варианта (после
рекурсивного вызова) возвращается обратно.<o:p></o:p></span></p>

<p class=a2><span style='font-size:11.0pt'><span
style='mso-spacerun:yes'> </span>Для представления множества слов будем
использовать<span style='mso-spacerun:yes'>  </span>массив указателей на
строки. Исключение строки из множества будет заключаться в установке указателя
на строку нулевой длины. Теперь можем “набросать” общий вид рекурсивной функции<o:p></o:p></span></p>

<p class=a2><o:p>&nbsp;</o:p></p>

<p class=a3>char
*w[]={&quot;РАСИСТ&quot;,&quot;МАТРАС&quot;,&quot;МАСТЕР&quot;,&quot;СИСТЕМА&quot;,&quot;СТЕРВА&quot;,<span
style='font-family:"Arial","sans-serif"'><o:p></o:p></span></p>

<p class=a3>NULL};<span style='mso-tab-count:3'>                  </span>//
Множество слов - глобальные данные</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=a3>int step(char *lw)<span style='mso-tab-count:1'>      </span>//
параметр - текущее слово цепочки</p>

<p class=a3>{ int n;<span style='mso-tab-count:3'>                </span>//
результат - можно присоединить</p>

<p class=a3><span style='mso-tab-count:4'>                        </span>//
оставшиеся</p>

<p class=a3><span style='font-family:"Arial","sans-serif"'><span
style='mso-tab-count:3'>                                   </span></span><span
style='mso-tab-count:1'>      </span>// проверка условия завершения рекурсии</p>

<p class=a3><span style='mso-tab-count:2'>            </span><span
style='font-family:"Courier New"'><span style='mso-tab-count:2'>            </span></span>//
- все слов из <span lang=EN-US style='font-family:"Arial","sans-serif";
mso-ansi-language:EN-US'>w</span><span style='font-family:"Arial","sans-serif"'>[]
</span>присоединены</p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>for (n=0;
w[n]!=NULL;n++)<o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'><span
style='mso-spacerun:yes'>    </span></span>{<span style='font-family:"Arial","sans-serif"'><span
style='mso-tab-count:4'>                                     </span></span>//
проверка на присоединение </p>

<p class=a3><span style='mso-spacerun:yes'>    </span>char *pw;<span
style='mso-tab-count:2'>           </span>// очередного слова</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>if (*w[n]==0) continue;</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>pw=w[n];<span
style='font-family:"Arial","sans-serif"'><span style='mso-tab-count:2'>                       </span></span>//
пустое слово - пропустить</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>w[n]=&quot;&quot;;<span
style='mso-tab-count:2'>            </span>// исключить проверяемое слово из</p>

<p class=a3><span style='mso-tab-count:4'>                        </span>//
множества</p>

<p class=a3><span style='mso-tab-count:1'>      </span>{<span style='mso-tab-count:
3'>                 </span>// попытка присоединить слово</p>

<p class=a3><span style='mso-tab-count:1'>      </span>if (step(pw))<span
style='mso-tab-count:1'>     </span>// - рекурсивный вызов</p>

<p class=a3><span style='mso-tab-count:1'>      </span><span
style='mso-spacerun:yes'>    </span>{ ...</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='mso-spacerun:yes'>    </span>return 1;<span
style='mso-tab-count:1'>     </span>// удача - завершить успешно</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='mso-spacerun:yes'>    </span>}</p>

<p class=a3><span style='mso-tab-count:1'>      </span>}</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>w[n]=pw;<span
style='mso-tab-count:2'>            </span>// возвратить исключенное слово</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>}<span style='font-family:
"Arial","sans-serif"'><span style='mso-tab-count:4'>                                     </span></span>//
неудача - нельзя присоединить</p>

<p class=a3>return 0;<span style='mso-tab-count:3'>               </span>// ни
одного слова</p>

<p class=a3>}</p>

<p class=a2><span style='font-size:11.0pt'>Данный “набросок” не содержит
некоторых частностей, которые не меняют общей картины</span><span
style='font-size:11.0pt;font-family:"Times New Roman","serif"'>:<o:p></o:p></span></p>

<p class=a4><span style='font-size:11.0pt'>проверка условия завершения рекурсии
- если массив указателей содержит только пустые строки, то рекурсивная
последовательность шагов завершена успешно (все слова выбраны на предыдущих
шагах)</span><span style='font-size:11.0pt;font-family:"Times New Roman","serif"'>;<o:p></o:p></span></p>

<p class=a4><span style='font-size:11.0pt'>проверка совпадения “хвоста”
очередного слова и начала выбираемого на текущем шаге - делается отдельной
функцией</span><span style='font-size:11.0pt;font-family:"Times New Roman","serif"'>;<o:p></o:p></span></p>

<p class=a4><span style='font-size:11.0pt'>сама цепочка выбранных слов
выводится в процессе “ретрансляции” положительного результата непосредственно
на экран в обратном порядке (что не совсем “красиво”). В принципе она может
быть сформирована и в глобальных данных.<span style='mso-spacerun:yes'>  
</span></span><span style='font-size:11.0pt;font-family:"Times New Roman","serif"'><o:p></o:p></span></p>

<p class=a2><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>#include
&lt;iostream.h&gt;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>#include
&lt;string.h&gt;<o:p></o:p></span></p>

<p class=a3>char
*w[]={&quot;РАСИСТ&quot;,&quot;МАТРАС&quot;,&quot;МАСТЕР&quot;,&quot;СИСТЕМА&quot;,&quot;СТЕРВА&quot;,<span
style='font-family:"Arial","sans-serif"'><o:p></o:p></span></p>

<p class=a3>NULL};</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=a3>int step(char *lw)<span style='mso-tab-count:1'>      </span><span
style='font-family:"Courier New"'><span style='mso-tab-count:1'>      </span></span>//
параметр - текущее слово цепочки</p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>{ int n;<o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>for (n=0;
w[n]!=NULL;n++)<o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'><span
style='mso-spacerun:yes'>    </span></span>if (*w[n]!=0) break;</p>

<p class=a3>if (w[n]==NULL)<span style='mso-tab-count:2'>         </span><span
style='font-family:"Courier New"'><span style='mso-tab-count:1'>      </span></span>//
цепочка выстроена, все слова</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span lang=PT-BR
style='mso-ansi-language:PT-BR'>return 1;<span style='mso-tab-count:3'>                </span>//
</span>из<span style='mso-ansi-language:PT-BR'> </span><span lang=PT-BR
style='font-family:"Arial","sans-serif";mso-ansi-language:PT-BR'>w[] </span>присоединены<span
lang=PT-BR style='mso-ansi-language:PT-BR'><o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>for (n=0;
w[n]!=NULL;n++)<o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'><span
style='mso-spacerun:yes'>    </span></span>{<span style='font-family:"Arial","sans-serif"'><span
style='mso-tab-count:5'>                                                 </span></span>//
проверка на присоединение </p>

<p class=a3><span style='mso-spacerun:yes'>    </span>char *pw;<span
style='mso-tab-count:2'>           </span><span style='font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span></span>// очередного слова</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>if (*w[n]==0) continue;</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>pw=w[n];<span
style='font-family:"Arial","sans-serif"'><span style='mso-tab-count:3'>                                   </span></span>//
пустое слово - пропустить</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>w[n]=&quot;&quot;;<span
style='mso-tab-count:3'>                 </span>// исключить проверяемое слово
из</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>if (TEST(lw,pw))<span
style='mso-tab-count:1'>    </span><span style='font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span></span>// множества</p>

<p class=a3><span style='mso-tab-count:1'>      </span>{<span style='mso-tab-count:
3'>                 </span><span style='font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span></span>// попытка присоединить слово</p>

<p class=a3><span style='mso-tab-count:1'>      </span>if (step(pw))<span
style='mso-tab-count:1'>     </span><span style='font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span></span>// присоединено - попытка вывести</p>

<p class=a3><span style='mso-tab-count:1'>      </span><span
style='mso-spacerun:yes'>    </span>{<span style='mso-tab-count:3'>             </span>//
цепочку из нового слова,</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='mso-spacerun:yes'>    </span>cout &lt;&lt; pw &lt;&lt;
&quot;\n&quot;; <span style='mso-tab-count:2'>           </span></p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='mso-spacerun:yes'>    </span>return 1;<span
style='mso-tab-count:2'>           </span>// удача - вывести слово и выйти</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='mso-spacerun:yes'>    </span>}</p>

<p class=a3><span style='mso-tab-count:1'>      </span>}</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>w[n]=pw;<span
style='mso-tab-count:3'>                 </span>// возвратить исключенное слово</p>

<p class=a3><span style='mso-spacerun:yes'>    </span>}</p>

<p class=a3>return 0;</p>

<p class=a3>}</p>

<p class=a2><span style='font-size:11.0pt'>Чисто технические детали</span><span
style='font-size:11.0pt;font-family:"Times New Roman","serif"'>: </span><span
style='font-size:11.0pt'>функция </span><span lang=EN-US style='font-size:11.0pt;
font-family:"Times New Roman","serif";mso-ansi-language:EN-US'>TEST</span><span
lang=EN-US style='font-size:11.0pt;font-family:"Times New Roman","serif"'> </span><span
style='font-size:11.0pt'>проверяет, не совпадает ли окончание первой строки с
началом второй путем обычного сравнения строк при заданной длине “хвоста”
первой строки.<o:p></o:p></span></p>

<p class=a2><span style='font-size:11.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int TEST(char *s,
char *r)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{ int n,k;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>n=strlen(s);<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (n==0) return
1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>for (;*s!=0
&amp;&amp; n&gt;1; s++,n--)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>        </span>if (strncmp(s,r,n)==0) return 1;<o:p></o:p></span></p>

<p class=a3>return 0; }</p>

<p class=a2><span style='font-size:11.0pt'>Другая техническая проблема -
удобство первоначального запуска рекурсии. Функция </span><span lang=EN-US
style='font-size:11.0pt;font-family:"Times New Roman","serif";mso-ansi-language:
EN-US'>TEST</span><span lang=EN-US style='font-size:11.0pt;font-family:"Times New Roman","serif"'>
</span><span style='font-size:11.0pt'>при первом параметре - пустой строке
возвращает ИСТИНУ при любом виде второй строки. Этого достаточно, чтобы
запустить первый шаг рекурсии. При наличии пустой строки в качестве параметра
функции </span><span lang=EN-US style='font-size:11.0pt;font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>step</span><span style='font-size:11.0pt'> на первом
шаге рекурсии будет производиться безусловная проверка каждого слова на предмет
создания цепочки.<o:p></o:p></span></p>

<p class=a3><span style='font-size:11.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=a3>void main() { step(&quot;&quot;); }</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:9.0pt'><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><span style='font-size:10.0pt'>Ханойские
башни.<o:p></o:p></span></i></b></p>

<p><span style='font-size:10.0pt'>Имеются три стержня с номерами 1,2,3. На
стержень 1 надето n дисков различного диаметра так, что они образуют пирамиду
(см.рис). Написать программу для печати последовательности перемещений дисков
со стержня на стержень, необходимых для переноса пирамиды со стержня 1 на
стержень 3 при использовании стержня 2 в качестве вспомогательного. При этом за
одно перемещение должен переноситься только один диск, и диск большего диаметра
не должен помещаться на диск меньшего диаметра. Доказано, что для n дисков
минимальное число необходимых перемещений равно 2^n-1. <o:p></o:p></span></p>

<p align=center style='text-align:center'><span style='font-size:10.0pt;
mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Рисунок_x0020_23" o:spid="_x0000_i1027"
 type="#_x0000_t75" alt="31" style='width:231.75pt;height:63pt;visibility:visible;
 mso-wrap-style:square'>
 <v:imagedata src="Лекция%206.files/image006.gif" o:title="31"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=309 height=84
src="Лекция%206.files/image006.gif" alt=31 v:shapes="Рисунок_x0020_23"><![endif]></span><b><span
style='font-size:10.0pt'><o:p></o:p></span></b></p>

<p><b><span style='font-size:10.0pt'><span style='mso-spacerun:yes'> </span></span></b><span
style='font-size:10.0pt'>Ниже приведена программа, которая вводит число n и
печатает список перемещений, решающая</span> <span style='font-size:10.0pt'>задачу
о Ханойских башнях при количестве дисков n. Используется внутренняя рекурсивная
процедура tn(n,i,j,w), печатающая перемещения, необходимые для переноса n
дисков со стержня i на стержень j с использованием вспомогательного стержня w
при {i,j,w} = {1,3,2}. <o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-spacerun:yes'>  
</span>/*<span style='mso-spacerun:yes'>                    </span>ханойские
башни<span style='mso-spacerun:yes'>                    </span>*/</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-spacerun:yes'>  
</span>#include </p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-spacerun:yes'>  
</span>main()<span style='mso-spacerun:yes'>                                
</span>/*<span style='mso-spacerun:yes'>   </span>вызывающая<span
style='mso-spacerun:yes'>   </span>*/</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-spacerun:yes'>  
</span><span lang=EN-US style='mso-ansi-language:EN-US'>{<span
style='mso-spacerun:yes'>   </span>void tn(int, int, int, int);<span
style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>  
</span></span>функция<span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>*/<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>       </span></span><span lang=PT-BR
style='mso-ansi-language:PT-BR'>int n;<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=PT-BR style='mso-ansi-language:
PT-BR'><span style='mso-spacerun:yes'>       </span>scanf(&quot;
%d&quot;,&amp;n);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=PT-BR style='mso-ansi-language:
PT-BR'><span style='mso-spacerun:yes'>       </span></span><span lang=EN-US
style='mso-ansi-language:EN-US'>tn(n,1,2,3);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>    </span>}<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>    </span>void tn(int n, int i, int j,
int w)<span style='mso-spacerun:yes'>   </span>/*<span
style='mso-spacerun:yes'>   </span></span>рекурсивная<span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>    </span>{<span
style='mso-spacerun:yes'>  </span>if (n&gt;1)<span
style='mso-spacerun:yes'>                           </span>/*<span
style='mso-spacerun:yes'>   </span></span>функция<span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>*/<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>        </span>{<span
style='mso-spacerun:yes'>  </span>tn (n-1,i,w,j);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>           </span>tn (1,i,j,w);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>           </span>tn (n-1,w,j,i);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>         </span>}<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>        </span>else printf(&quot; \n %d
-&gt; %d&quot;,i,j);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>        </span>return</span> ;</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-spacerun:yes'>   
</span>}</p>

<p><span style='font-size:10.0pt'>Последовательность вызовов функции tn при m=3
иллюстрируется древовидной структурой на рис.. Каждый раз при вызове функции tn
под параметры n, i, j, w выделяется память и запоминается место возврата. При
возврате из tn память, выделенная под параметры n, i, j, w, освобождается и
становится доступной память, выделенная под параметры n, i, j, w предыдущим
вызовом, а управление передается в место возврата. <o:p></o:p></span></p>

<p align=center style='text-align:center'><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Рисунок_x0020_25" o:spid="_x0000_i1026" type="#_x0000_t75" alt="33"
 style='width:242.25pt;height:117.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="Лекция%206.files/image007.gif" o:title="33"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=323 height=157
src="Лекция%206.files/image007.gif" alt=33 v:shapes="Рисунок_x0020_25"><![endif]></span></p>

<p align=center style='text-align:center'><span style='font-size:10.0pt'><span
style='mso-spacerun:yes'> </span>Последовательность вызовов функции tn.<o:p></o:p></span></p>

<p><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=a3 style='text-indent:36.0pt'>Еще одна программа:</p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>#include &lt;stdio.h&gt;<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>#include &lt;dos.h&gt;<span style='mso-spacerun:yes'>     </span>/*
sleep() */<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'>#<span lang=EN-US style='mso-ansi-language:
EN-US'>define</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>MAX</span>_<span lang=EN-US style='mso-ansi-language:EN-US'>NRINGS</span>
64<span style='mso-spacerun:yes'>    </span>/* Максимальное число колец */</p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>int st[4][MAX_NRINGS];<span style='mso-spacerun:yes'>   </span>/* 1,2,3
- стержни */<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>nr</span>[4];<span style='mso-spacerun:yes'>               </span>/*
Число колец на стержнях */</p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>nmoves</span>;<span style='mso-spacerun:yes'>              </span>/*
Число перемещений */</p>

<p class=a3 style='text-indent:36.0pt'>/*
---------------------------------------------- */</p>

<p class=a3 style='text-indent:36.0pt'>/* Печать текущего расположения колец на
стержнях */</p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>/* ---------------------------------------------- */<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>void print_st(void)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>{<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>int i, j;<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>for(i = 1; i &lt;= 3; i++) {<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span>printf(&quot;\n|
&quot;);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span>for(j = 0; j &lt;
nr[i]; j++) printf(&quot;%d &quot;, st[i][j]);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span></span>}</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>printf</span>(&quot;\<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>&quot;);</p>

<p class=a3 style='text-indent:36.0pt'>}</p>

<p class=a3 style='text-indent:36.0pt'>/* ------------------------------------
*/</p>

<p class=a3 style='text-indent:36.0pt'>/* Установка начального положения колец
*/</p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>/* ------------------------------------ */<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>void init(int nrings)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>{<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>for(nr[1] = 0; nrings &gt; 0;
nr[1]++,nrings--)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span>st</span>[1][<span
lang=EN-US style='mso-ansi-language:EN-US'>nr</span>[1]] = <span lang=EN-US
style='mso-ansi-language:EN-US'>nrings</span>;</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span>/*
Нанизали кольца на 1-й стержень */</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>nr</span>[2] = <span lang=EN-US
style='mso-ansi-language:EN-US'>nr</span>[3] = 0;</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span>/*
Два других стержня пусты */</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>nmoves</span> = 0;</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>print</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>st</span>();</p>

<p class=a3 style='text-indent:36.0pt'>}</p>

<p class=a3 style='text-indent:36.0pt'>/* ----------------------------- */</p>

<p class=a3 style='text-indent:36.0pt'>/* Функция переносит одно кольцо */</p>

<p class=a3 style='text-indent:36.0pt'>/* со стержня <span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>1 на стержень <span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>2<span style='mso-spacerun:yes'> 
</span>*/</p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>/* ----------------------------- */<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>void move1(int n1, int n2)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>{<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>st[n2][nr[n2]++] =
st[n1][--nr[n1]];<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>sleep</span>(1);<span
style='mso-spacerun:yes'>           </span>/* Пауза в 1 секунду */</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>print</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>st</span>();<span
style='mso-spacerun:yes'>         </span>/* Печать текущей позиции */</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>nmoves</span>++;</p>

<p class=a3 style='text-indent:36.0pt'>}</p>

<p class=a3 style='text-indent:36.0pt'>/*
------------------------------------------------- */</p>

<p class=a3 style='text-indent:36.0pt'>/* Функция <st1:City w:st="on"><st1:place
 w:st="on"><span lang=EN-US style='mso-ansi-language:EN-US'>hanoi</span></st1:place></st1:City>
перемещает верхние <span lang=EN-US style='mso-ansi-language:EN-US'>nrings</span>
колец<span style='mso-spacerun:yes'>     </span>*/</p>

<p class=a3 style='text-indent:36.0pt'>/* со стержня <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>1 на стержень <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>3, используя стержень<span
style='mso-spacerun:yes'>  </span>*/</p>

<p class=a3 style='text-indent:36.0pt'>/* <span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>2 в качестве промежуточного. 1 &lt;= <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>1,<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>2,<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>3
&lt;= 3. <span lang=EN-US style='mso-ansi-language:EN-US'>*/<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>/* ------------------------------------------------- */<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>void <st1:City w:st="on"><st1:place w:st="on">hanoi</st1:place></st1:City>(int
nrings, int i1, int i2, int i3)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>{<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>if(nrings == 1)<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span>move1(i1, i3);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>else {<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span><st1:City w:st="on"><st1:place
 w:st="on">hanoi</st1:place></st1:City>(nrings-1, i1, i3, i2);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span>move1(i1, i3);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:2'>            </span><st1:City w:st="on"><st1:place
 w:st="on">hanoi</st1:place></st1:City>(nrings-1, i2, i1, i3);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>}<span
style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>main()<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>{ <span style='mso-tab-count:1'>    </span>int nrings;<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>printf(&quot;Число колец:
&quot;); scanf(&quot;%d&quot;, &amp;nrings); init(nrings);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span><st1:City w:st="on"><st1:place
 w:st="on">hanoi</st1:place></st1:City>(nrings, 1, 2, 3);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>printf(&quot;Перенос колец
завершен.\n&quot;);<o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span>printf</span>(&quot;Число
перемещений - %<span lang=EN-US style='mso-ansi-language:EN-US'>d</span>.\<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>&quot;, <span lang=EN-US
style='mso-ansi-language:EN-US'>nmoves</span>); <span lang=EN-US
style='mso-ansi-language:EN-US'>return</span>(0);</p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-spacerun:yes'>      
</span>}</p>

<p class=a3 style='text-indent:36.0pt'><o:p>&nbsp;</o:p></p>

<p><span style='font-size:10.0pt'>Во многих случаях рекурсивные функции можно <b
style='mso-bidi-font-weight:normal'>заменить на эквивалентные нерекурсивные
функции</b> или фрагменты, используя стеки для хранения точек вызова и
вспомогательных переменных. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>Предположим, что имеется ситуация: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>     </span>main()<span style='mso-spacerun:yes'>             </span>/* вызывающая<span style='mso-spacerun:yes'>  </span>функция<span style='mso-spacerun:yes'>  </span>*/</pre><pre><span style='mso-spacerun:yes'>     </span>{ ...<span style='mso-spacerun:yes'>  </span>f() ...}</pre><pre><span style='mso-spacerun:yes'>     </span>f()<span style='mso-spacerun:yes'>                </span>/* рекурсивная функция<span style='mso-spacerun:yes'>  </span>*/</pre><pre><span style='mso-spacerun:yes'>     </span>{ ...<span style='mso-spacerun:yes'>  </span>f() ...}</pre>

<p><span style='font-size:10.0pt'>Здесь в функции main вызывается рекурсивная
функция f. Требуется заменить описание функции f и ее вызова на эквивалентный
фрагмент программы, т.е. удалить функцию f. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>Пусть рекурсивная функция f имеет параметры
Р1,Р2,...,Рs, внутренние переменные V1,V2,...,Vt и в функциях main и f имеется
k обращений к функции f. Для удаления такой функции требуются следующие
дополнительные объекты: <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- переменные AR1,AR2,...,ARs, содержащие
значения фактических параметров при вызове функции f (типы переменных должны
соответствовать типам параметров Р1,Р2,...,Рs); <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- переменная rz для вычисляемого функцией f
результата (тип переменных совпадает с типом возвращаемого значения функции f);
<o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- стек, содержащий в себе все параметры и все
внутренние переменные функции f, а также переменную lr типа int, для хранения
точки возврата, и переменную pst типа указатель, для хранения адреса
предыдущего элемента стека; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- указатель dl для хранения адреса вершин
стека; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- промежуточный указатель u для операций над
стеком; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- k новых меток L1,...,Lk для обозначенных
точек возврата; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- метка jf, используемая для обхода
модифицированного тела функции f; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>- промежуточная переменная l типа int для
передачи номера точки возврата. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>Чтобы получить эквивалентную нерекурсивную
программу без функции f, необходимо</span> выполнить следующие действия: </p>

<p><span style='font-size:10.0pt'>1. Убрать объявление функции f в функцию
main; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>2. Добавить в функции main объявления
переменных AR1,AR2,...,ARs,RZ, объявления стека ST и</span> <span
style='font-size:10.0pt'>указателей dl и u: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>      </span><span lang=EN-US
style='mso-ansi-language:EN-US'>typedef struct st { P1;P2;...;Ps;V1;V2;...;Vt;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                          </span>int lr;<span style='mso-spacerun:yes'>  </span>struct st *pst<span style='mso-spacerun:yes'>  </span>}<span style='mso-spacerun:yes'>  </span>ST;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span></span>ST *dl=NULL, *u;</pre>

<p><span style='font-size:10.0pt'>3. Модифицировать тело функции f во фрагмент
программы. Для этого следует: <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>а) удалить заголовок функции f; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>б) объявления параметров и внутренних
переменных и заменить фрагментом: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>               </span><span lang=EN-US
style='mso-ansi-language:EN-US'>goto jf;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>            </span>f: a=malloc(sizeof(ST));<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span></span><span
lang=PT-BR style='mso-ansi-language:PT-BR'>a-&gt;P1=AR1; a-&gt;P2=AR2; ... ;a-&gt;Ps=ARs;<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>               </span></span><span
lang=EN-US style='mso-ansi-language:EN-US'>a-&gt;lr=l; a-&gt;pst=dl;<span style='mso-spacerun:yes'>  </span>dl=a;<o:p></o:p></span></pre>

<p><span style='font-size:10.0pt'>в) в конце функции f поставить метку JF, а
все обращения к формальным аргументам заменить</span> обращением, к <span
style='font-size:10.0pt'>соответствующим элементам стека; <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>г) вместо каждого оператора return(y) в
функции f записать фрагмент: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>               </span><span lang=EN-US
style='mso-ansi-language:EN-US'>RZ=y; l=dl-&gt;lr;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span>a=dl; dl=a-&gt;pst; free(a);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span>switch(l)<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span>{ case 1: goto L1;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                 </span>case 2: goto L2;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                        </span>...<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                 </span>case k: goto Lk;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span></span>}</pre>

<p><span style='font-size:10.0pt'>4. Каждый i-тый вызов функции f (как в вызывающей
функции, так и в теле функции f) вида V=f(A1,A2,...,As) заменить фрагментом
программы : <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>     </span><span lang=PT-BR
style='mso-ansi-language:PT-BR'>AR1=A1; AR2=A2; ... ; ARs=As;<span style='mso-spacerun:yes'>  </span>l=i;<span style='mso-spacerun:yes'>  </span>goto f;<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>     </span></span>Li:<span style='mso-spacerun:yes'>  </span>V=RZ;</pre>

<p><span style='font-size:10.0pt'>где l=i обозначает l=1 при первом обращении к
функции f, l=2 при втором обращении и т.д. Нумерация обращений может быть
выполнена в произвольном порядке и требуется для возвращения в точку вызова с
помощью операторов switch и goto Li; (где Li есть L1 при первой замене, Li есть
L2 при второй замене и т.д.) <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>5. Вставить модифицированное тело функции f в
конце функции main. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt'>Для иллюстрации изложенного рассмотрим
несколько вариантов реализации программы вычисляющей функцию Аккермана, которая
определяется так: <o:p></o:p></span></p>

<pre><span lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>              </span>+ X+1,<span style='mso-spacerun:yes'>                 </span></span>если<span
lang=PT-BR style='mso-ansi-language:PT-BR'> N=0<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>              </span>| X,<span style='mso-spacerun:yes'>                   </span></span>если<span
lang=PT-BR style='mso-ansi-language:PT-BR'> N=1,<span style='mso-spacerun:yes'>  </span>Y=0,<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>              </span>| 0,<span style='mso-spacerun:yes'>                   </span></span>если<span
lang=PT-BR style='mso-ansi-language:PT-BR'> N=2,<span style='mso-spacerun:yes'>  </span>Y=0,<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>    </span>A(N,X,Y)= | 1,<span style='mso-spacerun:yes'>                   </span></span>если<span
lang=PT-BR style='mso-ansi-language:PT-BR'> N=3,<span style='mso-spacerun:yes'>  </span>Y=0,<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>              </span>| 2,<span style='mso-spacerun:yes'>                   </span></span>если<span
lang=PT-BR style='mso-ansi-language:PT-BR'> N=&gt;4, Y=0,<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>              </span>+ A(N-1,A(N,X,Y-1),X), </span>если<span
lang=PT-BR style='mso-ansi-language:PT-BR'> N#0,<span style='mso-spacerun:yes'>  </span>Y#0;<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><o:p>&nbsp;</o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>     </span></span>где N,X,Y - целые неотрицательные числа.</pre>

<p><span style='font-size:10.0pt'>Следующая программа вычисляет функцию
Аккермана с использованием рекурсивной функции ackr и вспомогательной функции
smacc: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>      </span>рекурсивное<span style='mso-spacerun:yes'>  </span>вычисление функции Аккермана<span style='mso-spacerun:yes'>     </span>*/</pre><pre><span style='mso-spacerun:yes'>       </span># include </pre><pre><span style='mso-spacerun:yes'>       </span>main ()<span style='mso-spacerun:yes'>                         </span><span style='mso-spacerun:yes'>  </span>/*<span style='mso-spacerun:yes'>  </span>вызывающая<span style='mso-spacerun:yes'>     </span>*/</pre><pre><span style='mso-spacerun:yes'>       </span>{<span style='mso-spacerun:yes'>   </span>int x,y,n,t;<span style='mso-spacerun:yes'>                  </span>/*<span style='mso-spacerun:yes'>  </span>функция<span style='mso-spacerun:yes'>         </span>*/</pre><pre><span style='mso-spacerun:yes'>           </span><span
lang=EN-US style='mso-ansi-language:EN-US'>int ackr(int, int, int);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>           </span></span><span
lang=PT-BR style='mso-ansi-language:PT-BR'>scanf(&quot;%d %d %d&quot;,&amp;n,&amp;x,&amp;y);<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>           </span></span><span
lang=EN-US style='mso-ansi-language:EN-US'>t=ackr(n,x,y);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>           </span>printf(&quot;%d&quot;,t);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>       </span>}<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>int smacc( int n,int x ) <span style='mso-spacerun:yes'>         </span>/*<span style='mso-spacerun:yes'>  </span></span>вспомогательная<span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>{<span style='mso-spacerun:yes'>   </span>switch (n)<span style='mso-spacerun:yes'>                    </span>/*<span style='mso-spacerun:yes'>   </span></span>функция<span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>         </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>           </span>{<span style='mso-spacerun:yes'>  </span>case 0:<span style='mso-spacerun:yes'>  </span>return(x+1);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>              </span>case 1:<span style='mso-spacerun:yes'>  </span>return (x);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>              </span>case 2:<span style='mso-spacerun:yes'>  </span>return (0);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>              </span>case 3:<span style='mso-spacerun:yes'>  </span>return (1);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>              </span>default: return (2);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>            </span>}<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>}<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>int ackr( int n, int x, int y)<span style='mso-spacerun:yes'>    </span>/*<span style='mso-spacerun:yes'>  </span></span>рекурсивная<span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>      </span>{<span style='mso-spacerun:yes'>  </span>int z;<span style='mso-spacerun:yes'>                         </span>/*<span style='mso-spacerun:yes'>  </span></span>функция<span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>         </span>int smacc( int,int);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>         </span></span><span
lang=PT-BR style='mso-ansi-language:PT-BR'>if(n==0 || y==0)<span style='mso-spacerun:yes'>  </span>z=smacc(n,x);<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>         </span>else { z=ackr(n,x,y-1);<span style='mso-spacerun:yes'>        </span>/*<span style='mso-spacerun:yes'>  </span></span>рекурсивные<span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>      </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>                </span>z=ackr(n-1,z,x);<span style='mso-spacerun:yes'>  </span>}<span style='mso-spacerun:yes'>     </span>/*<span style='mso-spacerun:yes'>  </span></span>вызовы<span
lang=PT-BR style='mso-ansi-language:PT-BR'> ackr(...) </span>*/</pre><pre><span style='mso-spacerun:yes'>         </span>return z;</pre><pre><span style='mso-spacerun:yes'>      </span>}</pre>

<p><span style='font-size:10.0pt'>Модифицируя функции main и ackr в
соответствии с изложенным методом получим следующую программу: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>      </span>/*<span style='mso-spacerun:yes'>       </span>Эквивалентная нерекурсивная программа<span style='mso-spacerun:yes'>       </span>*/</pre><pre><span style='mso-spacerun:yes'>      </span>/*<span style='mso-spacerun:yes'>       </span>для вычисления функции Аккермана<span style='mso-spacerun:yes'>            </span>*/</pre><pre><span style='mso-spacerun:yes'>     </span><span
lang=EN-US style='mso-ansi-language:EN-US'>#include <o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>#include <o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>int main()<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>{<span style='mso-spacerun:yes'>  </span>typedef struct st<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>{ int i,j,k,z,lr;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>          </span>struct st *pst;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>} ST;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>ST *u, *dl=NULL;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>int l,x,y,n;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>int<span style='mso-spacerun:yes'>  </span>smacc(int,int);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>int an,ax,ay,rz,t;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>scanf(&quot;%i %i %i&quot;,&amp;n,&amp;x,&amp;y);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>an</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>;<span lang=EN-US
style='mso-ansi-language:EN-US'>ax</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>x</span>;<span lang=EN-US style='mso-ansi-language:EN-US'>ay</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>y</span>;<span lang=EN-US
style='mso-ansi-language:EN-US'>l</span>=1;<span style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>   </span>замена вызова<span style='mso-spacerun:yes'>    </span>-<span style='mso-spacerun:yes'>  </span>*/</pre><pre><span style='mso-spacerun:yes'>        </span><span
lang=PT-BR style='mso-ansi-language:PT-BR'>goto ackr;<span style='mso-spacerun:yes'>                </span>/*<span style='mso-spacerun:yes'>     </span>t=ackr(n,x,y);<span style='mso-spacerun:yes'>       </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>  </span>l1: t=rz;<span style='mso-spacerun:yes'>                     </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><o:p>&nbsp;</o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>        </span>printf(&quot;\n %d &quot;,t);<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>        </span></span>goto jackr;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>        </span>/*<span style='mso-spacerun:yes'>    </span>начало фрагмента заменяющего функцию<span style='mso-spacerun:yes'>  </span><span
lang=EN-US style='mso-ansi-language:EN-US'>ackr<span style='mso-spacerun:yes'>      </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span>ackr:<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>u=( ST *) malloc( sizeof (ST) );<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>u-&gt;i=an;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>u-&gt;j=ax;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>u-&gt;k=ay;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>u-&gt;lr=l;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>u-&gt;pst=dl;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>dl=u;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>if (an==0||ay==0)<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>dl-&gt;z=smacc(an,ax);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>else<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>             </span>{<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                </span>an=dl-&gt;i;<span style='mso-spacerun:yes'>         </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>   </span></span>замена<span
style='mso-ansi-language:EN-US'> </span>вызова<span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>    </span>-<span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                </span>ax=dl-&gt;j;<span style='mso-spacerun:yes'>         </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                </span>ay=dl-&gt;k-1;<span style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>     </span>z=ackr(n,x,y-1);<span style='mso-spacerun:yes'>     </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                </span></span><span
lang=PT-BR style='mso-ansi-language:PT-BR'>l=2;<span style='mso-spacerun:yes'>              </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>                </span>goto ackr;<span style='mso-spacerun:yes'>        </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>           </span>l2:<span style='mso-spacerun:yes'>  </span>dl-&gt;z=rz;<span style='mso-spacerun:yes'>      </span><span style='mso-spacerun:yes'>   </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><o:p>&nbsp;</o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>                </span></span>an=dl-&gt;i-1;<span style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>   </span>замена вызова<span style='mso-spacerun:yes'>    </span>-<span style='mso-spacerun:yes'>  </span>*/</pre><pre><span style='mso-spacerun:yes'>                </span><span
lang=PT-BR style='mso-ansi-language:PT-BR'>ax=rz;<span style='mso-spacerun:yes'>            </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>                </span>ay=dl-&gt;j;<span style='mso-spacerun:yes'>         </span>/*<span style='mso-spacerun:yes'>     </span>z=ackr(n-1,z,x);<span style='mso-spacerun:yes'>     </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>                </span>l=3;<span style='mso-spacerun:yes'>      </span><span style='mso-spacerun:yes'>        </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>                </span>goto ackr;<span style='mso-spacerun:yes'>        </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>           </span>l3:<span style='mso-spacerun:yes'>  </span>dl-&gt;z=rz;<span style='mso-spacerun:yes'>         </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=PT-BR style='mso-ansi-language:PT-BR'><span style='mso-spacerun:yes'>             </span></span><span
lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>rz=dl-&gt;z;<span style='mso-spacerun:yes'>                 </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>       </span><span style='mso-spacerun:yes'> </span>an=dl-&gt;i;<span style='mso-spacerun:yes'>                 </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span></span>ax=dl-&gt;j;<span style='mso-spacerun:yes'>                 </span>/*<span style='mso-spacerun:yes'>       </span>замена<span style='mso-spacerun:yes'>             </span>*/</pre><pre><span style='mso-spacerun:yes'>        </span>ay=dl-&gt;k;<span style='mso-spacerun:yes'>                 </span>/*<span style='mso-spacerun:yes'>                          </span>*/</pre><pre><span style='mso-spacerun:yes'>        </span>l=dl-&gt;lr;<span style='mso-spacerun:yes'>                 </span>/*<span style='mso-spacerun:yes'>       </span>оператора<span style='mso-spacerun:yes'>          </span>*/</pre><pre><span style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>     </span>u=dl;<span style='mso-spacerun:yes'>                     </span>/*<span style='mso-spacerun:yes'>                          </span>*/</pre><pre><span style='mso-spacerun:yes'>        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>dl=u-&gt;pst;<span style='mso-spacerun:yes'>                </span>/*<span style='mso-spacerun:yes'>       </span>return z ;<span style='mso-spacerun:yes'>         </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>free(u);<span style='mso-spacerun:yes'>                  </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>        </span>switch(l)<span style='mso-spacerun:yes'>                 </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>             </span>{<span style='mso-spacerun:yes'>  </span>case 1: goto l1;<span style='mso-spacerun:yes'>  </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                </span>case 2: goto l2;<span style='mso-spacerun:yes'>  </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>                </span>case 3: goto l3;<span style='mso-spacerun:yes'>  </span>/*<span style='mso-spacerun:yes'>                          </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>             </span>}<span style='mso-spacerun:yes'>                    </span>/*<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>jackr:<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>}<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>int smacc( int n,int x )<span style='mso-spacerun:yes'>      </span>/* </span>вспомогательная<span
style='mso-ansi-language:EN-US'> </span>функция<span lang=EN-US
style='mso-ansi-language:EN-US'> */<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>     </span>{<span style='mso-spacerun:yes'>  </span>switch (n)<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>             </span>{ case 0:<span style='mso-spacerun:yes'>  </span>return(x+1);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span>case 1:<span style='mso-spacerun:yes'>  </span>return (x);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span>case 2:<span style='mso-spacerun:yes'>  </span>return (0);<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>               </span></span>case 3:<span style='mso-spacerun:yes'>  </span>return (1);</pre><pre><span style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>            </span>default: return (2);</pre><pre><span style='mso-spacerun:yes'>             </span>}</pre><pre><span style='mso-spacerun:yes'>     </span>}</pre>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=31 style='mso-outline-level:3'><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Times New Roman","serif";color:black'>Результат
функции рекурсивного поиска<o:p></o:p></span></b></p>

<p class=a2>До сих пор мы<span style='mso-spacerun:yes'>  </span>рассматривали
варианты рекурсивных функций с логическим результатом. В этом случае
производился поиск первого подходящего варианта. Причем данные самого варианта
(например, путь к выходу из лабиринта) могли храниться в глобальных переменных.
Если же допустимых вариантов несколько, то алгоритм несколько усложнится<span
style='font-family:"Times New Roman","serif"'>. </span>Воспользуемся предыдущим
примером для иллюстрации вносимых изменений<span style='font-family:"Times New Roman","serif"'>.<o:p></o:p></span></p>

<p class=a2>Прежде всего, рекурсивная функция будет производить полный перебор
возможных вариантов, без завершения по первому попавшемуся.</p>

<p class=a3><span style='font-family:"Arial","sans-serif"'><o:p>&nbsp;</o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>xxx step(char *lw)<span
style='mso-tab-count:3'>                 </span><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{ ...<span
style='mso-tab-count:3'>             </span><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>for (...)<span
style='mso-tab-count:1'>   </span></span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'>{<span style='font-family:"Courier New"'>...</span><span
style='mso-tab-count:4'>                   </span><span
style='mso-spacerun:yes'>   </span></p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span>if (step(pw))<span style='mso-tab-count:2'>           </span></p>

<p class=a3><span style='mso-tab-count:1'>      </span><span
style='mso-spacerun:yes'>    </span><span style='mso-tab-count:1'>  </span>{}<span
style='mso-tab-count:2'>          </span></p>

<p class=a3><span style='mso-spacerun:yes'>    </span>}<span style='mso-tab-count:
4'>                   </span></p>

<p class=a3>return ...}<span style='mso-tab-count:3'>             </span></p>

<p class=a3 style='text-indent:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=a2>Далее, изменения будут касаться самого принципа формирования
результата. Каждый шаг рекурсивного алгоритма получает несколько различных
результатов от рекурсивных вызовов, обрабатывает их и формирует собственный
результат аналогичного типа. Обработка может заключаться в простейшем случае в
выборе варианта, соответствующего заданному критерию и передаче (ретрансляции)
его “наверх” (например, выбор минимального или максимального из полученных). В
более сложных случаях к результатам “примешиваются” данные текущего шага. Так
или иначе, возврат результатов от разветвляющейся рекурсии должен идти в
обратном порядке</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>char *s(...)<span
style='mso-tab-count:4'>                       </span><o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{ char *p;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>p=s(...);<span
style='mso-tab-count:4'>                    </span>// </span>вызов<span
lang=EN-US style='mso-ansi-language:EN-US'> char *s(){...}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (...) p=s(...);<span
style='mso-tab-count:2'>           </span></span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>// </span>вызов<span
lang=EN-US style='mso-ansi-language:EN-US'> char *s(){...}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (...) p=s(...);<span
style='mso-tab-count:2'>           </span></span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>// </span>вызов<span
lang=EN-US style='mso-ansi-language:EN-US'> char *s(){...}<o:p></o:p></span></p>

<p class=a3>}</p>

<p class=a2>Следующий важный принцип заключается в том, что результат
рекурсивной функции должен представлять структуру данных, полностью содержащую
все данные о найденном варианте, использование глобальных переменных здесь
невозможно. Обычно такие данные имеют переменную размерность и для их представления
используются динамические структуры данных (динамические массивы, списки и
т.д.). В предыдущем примере результатом рекурсивной функции поиска может быть
строка (в динамической памяти), содержащая цепочку, выведенную из оставшихся
слов, начиная с заданного формальным параметром. При этом естественно
отсекаются недопустимые варианты (из оставшихся слов цепочка не выводится)
путем возврата <span lang=EN-US style='font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>NULL</span><span style='font-family:"Times New Roman","serif"'>.</span></p>

<p class=a2><o:p>&nbsp;</o:p></p>

<p class=a2>В С++ для возврата рекурсивной функцией совокупности параметров
можно использовать результата функции – структурированную переменную, то есть
возвращать структурированный тип по значению. В этом случае все проблемы по
распределению памяти для временного хранения результата функции<span
style='mso-spacerun:yes'>  </span>решаются транслятором. При этом в самой
функции можно использовать операции присваивания структурированных переменных.
В качестве примера рассмотрим вариант предыдущей программы, работающий со
строкой ограниченной размерности, которая является элементом структуры.</p>

<p class=a3><o:p>&nbsp;</o:p></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>#include
&lt;iostream.h&gt;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>#include
&lt;string.h&gt;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>char
*w[]={&quot;bba&quot;,&quot;abb&quot;,&quot;ba&quot;,NULL};<o:p></o:p></span></p>

<p class=a2><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int TEST(char *s,
char *r)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int n,k;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>k=n=strlen(s);<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (n==0) return
0;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>for (;*s!=0
&amp;&amp; n&gt;0; s++,n--)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:1'>    </span>if
(strncmp(s,r,n)==0)<span style='mso-tab-count:1'>  </span>return k-n;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>return -1;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>#define SZ 80<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>struct string<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>{<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>int</span><span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>null</span>;<span style='mso-tab-count:4'>                   </span>// Признак
– строка пустая</p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>char</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>str</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>SZ</span>];<span style='mso-tab-count:
3'>                </span>// Строка ограниченной длины</p>

<p class=a3>};</p>

<p class=a3>string step(char *lw)<span style='mso-tab-count:2'>        </span>//
Функция возвращает структуру как результат</p>

<p class=a3>{ int n; </p>

<p class=a3>string s,smin;<span style='mso-tab-count:3'>               </span>//
Локальные переменные - структуры</p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>for (n=0;
w[n]!=NULL;n++)<o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'><span
style='mso-spacerun:yes'>    </span></span><span lang=EN-US style='mso-ansi-language:
EN-US'>if (*w[n]!=0) break;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>if (w[n]==NULL)<span
style='mso-tab-count:2'>         </span><span style='mso-tab-count:1'>      </span>//
</span>Последняя<span style='mso-ansi-language:EN-US'> </span>строка<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>{ s.null=0; strcpy(s.str,lw); return s; }<o:p></o:p></span></p>

<p class=a3>smin.null=1;<span style='mso-tab-count:3'>                 </span>//
Признак – строка еще пока пустая</p>

<p class=a3><span lang=PT-BR style='mso-ansi-language:PT-BR'>for (n=0;
w[n]!=NULL;n++)</span><span lang=PT-BR style='font-family:"Courier New";
mso-ansi-language:PT-BR'><o:p></o:p></span></p>

<p class=a3><span lang=PT-BR style='font-family:"Courier New";mso-ansi-language:
PT-BR'><span style='mso-tab-count:1'>      </span></span>{</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='font-family:
"Courier New"'><span style='mso-tab-count:1'>  </span></span>char *pw;<span
style='mso-spacerun:yes'>  </span>int l;</p>

<p class=a3><span style='mso-tab-count:1'>      </span><span lang=EN-US
style='mso-ansi-language:EN-US'>string</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>pp</span>;<span style='mso-tab-count:
3'>              </span>// Результат рекурсивного вызова</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='font-family:
"Courier New"'><span style='mso-tab-count:1'>  </span></span><span lang=EN-US
style='mso-ansi-language:EN-US'>if (*w[n]==0) continue;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>    </span></span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'><span style='mso-tab-count:1'>  </span></span><span
lang=EN-US style='mso-ansi-language:EN-US'>if ((l=TEST(lw,w[n]))!=-1)<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'><span style='mso-tab-count:1'>      </span></span>{<span
style='mso-tab-count:4'>                       </span></p>

<p class=a3><span style='mso-tab-count:1'>      </span><span style='font-family:
"Courier New"'><span style='mso-tab-count:1'>      </span></span>pw=w[n];</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='font-family:"Courier New"'><span style='mso-tab-count:
1'>      </span></span>w[n]=&quot;&quot;;</p>

<p class=a3><span style='mso-tab-count:1'>      </span><span style='font-family:
"Courier New"'><span style='mso-tab-count:1'>      </span></span>pp=step(pw);<span
style='mso-tab-count:2'>            </span>// Рекурсивная функция возвращает</p>

<p class=a3><span style='mso-tab-count:2'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (!<span lang=EN-US style='mso-ansi-language:
EN-US'>pp</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>null</span>) <span
style='mso-tab-count:2'>          </span>// структурированную переменную</p>

<p class=a3><span style='mso-tab-count:1'>      </span><span
style='mso-spacerun:yes'>    </span><span style='font-family:"Courier New"'><span
style='mso-tab-count:2'>        </span></span>{<span style='mso-tab-count:3'>                 </span>//
За распределением памяти под<span style='mso-tab-count:1'>    </span></p>

<p class=a3 style='text-indent:36.0pt'><span style='mso-tab-count:1'>      </span><span
style='mso-spacerun:yes'>    </span><span style='font-family:"Courier New"'><span
style='mso-tab-count:1'>  </span></span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>s</span><span style='font-family:"Courier New"'>.</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>null</span><span
style='font-family:"Courier New"'>=0;</span> <span style='mso-tab-count:2'>        </span>//
структурированные переменные<span style='font-family:"Courier New"'><o:p></o:p></span></p>

<p class=a3 style='text-indent:36.0pt'><span style='font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span></span>strcpy(s.<span lang=EN-US
style='mso-ansi-language:EN-US'>str</span>,lw);<span style='mso-tab-count:1'> </span>//
не следим</p>

<p class=a3><span style='mso-spacerun:yes'>        </span><span
style='mso-tab-count:1'>    </span><span style='mso-spacerun:yes'>    </span><span
style='font-family:"Courier New"'><span style='mso-tab-count:1'>  </span></span><span
lang=EN-US style='mso-ansi-language:EN-US'>strcat(s.str,pp.str);<span
style='mso-tab-count:1'>   </span><span style='mso-tab-count:1'>      </span> <o:p></o:p></span></p>

<p class=a3 style='margin-left:36.0pt;text-indent:36.0pt'><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span><span lang=EN-US style='mso-ansi-language:
EN-US'>if (smin.null) smin=s; else<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span><span style='mso-spacerun:yes'>    </span></span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>        </span></span><span lang=EN-US
style='mso-ansi-language:EN-US'>if (strlen(smin.str)&gt;strlen(s.str))<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                </span></span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>  </span></span><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>      </span></span>smin=s;<span
style='mso-tab-count:1'>     </span>// Прямое присваивание структур</p>

<p class=a3><span style='mso-spacerun:yes'>    </span><span style='mso-tab-count:
1'>  </span><span style='mso-spacerun:yes'>    </span><span style='font-family:
"Courier New"'><span style='mso-tab-count:2'>        </span></span>}</p>

<p class=a3 style='text-indent:36.0pt'><span style='font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span></span><span lang=EN-US style='mso-ansi-language:
EN-US'>w[n]=pw;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'><span style='mso-tab-count:1'>      </span></span><span
lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span>}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>return smin;<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a3><span lang=EN-US style='mso-ansi-language:EN-US'>void main() { cout
&lt;&lt; step(&quot;&quot;).str;}<o:p></o:p></span></p>

<p class=MsoNormal style='background:white'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='background:white'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='background:white'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
